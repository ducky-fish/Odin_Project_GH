{"ast":null,"code":"var _jsxFileName = \"/Users/nmsu/Documents/Coding/Odin_Project/Practice/practice-app/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Practice() {\n  _s();\n  //   const [squares, setSquares] = useState(Array(9).fill(null));\n\n  let [answerInput, setAnswerInput] = useState(0);\n  answerInput = () => {\n    setAnswerInput(parseInt(prompt(\"Please enter the number you would like to FizzBuzz up to: \")));\n  };\n  useEffect(answerInput, []);\n  //   function handleClick(i) {\n  //     const nextSquares = squares.slice();\n  //     nextSquares[i] = \"X\";\n  //     setSquares(nextSquares);\n  //   }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"practice\",\n      children: [/*#__PURE__*/_jsxDEV(Prompter, {\n        value: answerInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"makeFizzBuzz\", {\n        number: answer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(Practice, \"bwyXKBgm4SOFUvZUBVO4Z9QpV8Y=\");\n_c = Practice;\nfunction Prompter({\n  value\n}) {\n  /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"text\", {\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_c2 = Prompter;\nfunction makeFizzBuzz({\n  number\n}) {\n\n  //if answer % 3 == 0 print fizz\n  //if answer % 5 == 0 print buzz\n  //if answer % 3 check 5 and vice versa\n  // for(let i = 0; i < answer; )\n  // if(answer%3==0){\n}\n\n// function Square({value, onSquareClick}){\n//   return(\n//     <button className=\"square\" onClick={onSquareClick}>\n//     {value}\n//     </button>\n//   );\n// }\nvar _c, _c2;\n$RefreshReg$(_c, \"Practice\");\n$RefreshReg$(_c2, \"Prompter\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Practice","_s","answerInput","setAnswerInput","parseInt","prompt","children","className","Prompter","value","fileName","_jsxFileName","lineNumber","columnNumber","number","answer","_c","_c2","makeFizzBuzz","$RefreshReg$"],"sources":["/Users/nmsu/Documents/Coding/Odin_Project/Practice/practice-app/src/App.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nexport default function Practice() {\n//   const [squares, setSquares] = useState(Array(9).fill(null));\n  \n  let [answerInput, setAnswerInput] = useState(0);\n\n  answerInput = () => {\n    setAnswerInput(parseInt(prompt(\"Please enter the number you would like to FizzBuzz up to: \")))\n  };\n  \n\n  \n\n  useEffect(answerInput, []);\n//   function handleClick(i) {\n//     const nextSquares = squares.slice();\n//     nextSquares[i] = \"X\";\n//     setSquares(nextSquares);\n//   }\n\n  return(\n    <>\n      <div className=\"practice\">\n        <Prompter value = {answerInput}/>\n        <makeFizzBuzz number = {answer}/>\n        \n        {/* <Square value = {squares[2]} onSquareClick = {() => handleClick(2)}/> */}\n      </div>\n  \n    </>\n\n  )\n}\n\nfunction Prompter({value}){\n    <div>\n      <text>{value}</text>\n    </div>\n    \n}\n\nfunction makeFizzBuzz({number}){\n  \n  //if answer % 3 == 0 print fizz\n  //if answer % 5 == 0 print buzz\n  //if answer % 3 check 5 and vice versa\n  // for(let i = 0; i < answer; )\n  // if(answer%3==0){\n\n  }\n\n// function Square({value, onSquareClick}){\n//   return(\n//     <button className=\"square\" onClick={onSquareClick}>\n//     {value}\n//     </button>\n//   );\n// }\n\n\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE5C,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EACnC;;EAEE,IAAI,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EAE/CO,WAAW,GAAGA,CAAA,KAAM;IAClBC,cAAc,CAACC,QAAQ,CAACC,MAAM,CAAC,4DAA4D,CAAC,CAAC,CAAC;EAChG,CAAC;EAKDX,SAAS,CAACQ,WAAW,EAAE,EAAE,CAAC;EAC5B;EACA;EACA;EACA;EACA;;EAEE,oBACEL,OAAA,CAAAE,SAAA;IAAAO,QAAA,eACET,OAAA;MAAKU,SAAS,EAAC,UAAU;MAAAD,QAAA,gBACvBT,OAAA,CAACW,QAAQ;QAACC,KAAK,EAAIP;MAAY;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACjChB,OAAA;QAAciB,MAAM,EAAIC;MAAO;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAG9B;EAAC,gBAEN,CAAC;AAGP;AAACZ,EAAA,CA/BuBD,QAAQ;AAAAgB,EAAA,GAARhB,QAAQ;AAiChC,SAASQ,QAAQA,CAAC;EAACC;AAAK,CAAC,EAAC;EACtB,aAAAZ,OAAA;IAAAS,QAAA,eACET,OAAA;MAAAS,QAAA,EAAOG;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjB,CAAC;AAEV;AAACI,GAAA,GALQT,QAAQ;AAOjB,SAASU,YAAYA,CAAC;EAACJ;AAAM,CAAC,EAAC;;EAE7B;EACA;EACA;EACA;EACA;AAAA;;AAIF;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,IAAAE,EAAA,EAAAC,GAAA;AAAAE,YAAA,CAAAH,EAAA;AAAAG,YAAA,CAAAF,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}